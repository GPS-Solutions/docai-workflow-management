---
name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ master ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: adp-ui
      PROJECT_ID: claims-processing-dev
      DEPLOYMENT_NAME: adp-ui
      GKE_CLUSTER: default-cluster
      GKE_LOCATION: us-central1
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.DEPLOYMENT_DEV_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v patch    

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet

    - name: Push Docker Image to Container Registry (GCR)
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_LOCATION }}
        
    - name: Print kubectl & kustomize versions
      run: |-
        kubectl version
        kustomize version
 
    - name: Kustomize Set Image and deploy to the GKE
      run: |-
        cd kustomize/dev
        kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        kustomize build . | kubectl apply -f -
        kubectl rollout restart deployment/$DEPLOYMENT_NAME
        kubectl get deploy -o wide
        kubectl get svc -o wide
 

